namespace ScraperBackendService.Core.Routing;/// <summary>/// Enumeration defining different scraping route strategies for content identification and retrieval./// Determines how the scraping system should process input parameters to locate and extract content metadata./// </summary>/// <remarks>/// This enumeration supports different content identification workflows:/// - Automatic detection based on input format/// - Direct ID-based lookup for known identifiers/// - Filename-based extraction for media library scenarios/// </remarks>/// <example>/// Usage examples:////// // Automatic route detection/// var route = ScrapeRoute.Auto;/// // System will analyze input and choose best strategy////// // Direct ID lookup/// var route2 = ScrapeRoute.ById;/// // Force direct ID-based content retrieval////// // Filename-based extraction/// var route3 = ScrapeRoute.ByFilename;/// // Extract identifiers from filename patterns/// </example>public enum ScrapeRoute{    /// <summary>    /// Automatic route detection based on input analysis.    /// The system automatically determines the best scraping strategy by analyzing    /// the input format, content, and available identification patterns.    /// </summary>    /// <example>    /// Input: "RJ123456" → Detected as DLsite ID → Route to ById    /// Input: "https://hanime1.me/watch?v=12345" → Detected as URL → Route to ById    /// Input: "My Movie [RJ123456].mp4" → Detected as filename → Route to ByFilename    /// </example>    Auto = 0,    /// <summary>    /// Direct ID-based content lookup strategy.    /// Uses known content identifiers (URLs, product IDs, etc.) to directly    /// access and extract metadata from content provider sources.    /// </summary>    /// <example>    /// Supported ID formats:    /// - Hanime: "12345", "https://hanime1.me/watch?v=12345"    /// - DLsite: "RJ123456", "https://www.dlsite.com/maniax/work/=/product_id/RJ123456.html"    /// - Direct URLs: "https://provider.com/content/identifier"    /// </example>    ById = 1,    /// <summary>    /// Filename-based identifier extraction strategy.    /// Analyzes filename patterns to extract embedded content identifiers,    /// typically used in media library management scenarios where files    /// contain provider IDs or other identifying information.    /// </summary>    /// <example>    /// Supported filename patterns:    /// - "[RJ123456] Title.mp4" → Extracts "RJ123456"    /// - "Title [Hanime-12345].mkv" → Extracts "12345"    /// - "Movie.Name.2024.RJ987654.mp4" → Extracts "RJ987654"    /// - "Content [DLsite-VJ123456].avi" → Extracts "VJ123456"    /// </example>    ByFilename = 2}